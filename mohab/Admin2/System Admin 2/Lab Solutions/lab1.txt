1. Use systemctl to view the status of all the system services.

systemctl list-unit-files --type service

2. Change the default run level back to multi-user.target and reboot.

systemctl set-default multi-user.target
password>>

reboot   (reboot -p turns of the system)

the following steps are for reverting back to gui:

after logging in
systemctl set-default graphical.target
password>>
reboot

3. Send mail to the root user.

service postfix restart
mail root
finally working
EOT   (hit cmd + d)

4. Verify that you have received this mail.

sudo su - root
mail

5. Use systemctl utility to stop postfix/sendmail service

systemctl stop postfix

6. Send mail again to the root user.

mail root
test
EOT   (hit cmd + d)

7. Verify that you have received this mail.

mail

last mail recived was 'finally working'

8. Use systemctl utility to start postfix/sendmail service

systemctl start postfix
mail root
Now I hope you revieve me
EOT  (cmd + d)

9. Verify that you have received this mail.

sudo su - root
mail
recieved

10. Edit in the GRUB2 configuration file and change the timeout variable equal 20 seconds.

vi /etc/default/grub
GRUB_TIMEOUT=2	0
grub2-mkconfig

11. Edit in the GRUB2 configuration file and change your default operating system

vi /etc/default/grub
GRUB_DEFAULT=1
grub2-mkconfig

12. You want to know some information about the status of the system every ten minutes
today between the hours of 8:00 AM and 5:00 PM. to help investigate some
performance issues you have been having. You suspect it might be memory related
and want to keep an eye on those resources.

crontab -e (then hit enter, a vi will open (default file name is the logged in user, in my case root))
*/10 * * * * /bin/ls / (save and quit)
To verify it worked
cat /var/spool/cron/root


13. Use mail as the root user to check for e-mail from the cron jobs you have scheduled.

systemctl start postfix
mail

14. How could you send the output from these cron jobs to another e-mail address (the manager user)?

vi cat /etc/anacrontab
MAILTO=root,ahmed

or
vi /root/.forward
ahmed

15. Use mail as the manager user to check for e-mail from the cron jobs you have scheduled.

mail

16. log all kernel messges to /var/log/kernal

touch /var/log/kernal
vi /etc/rsyslog.conf
kern.*   /var/log/kernal
systemctl restart rsyslog.service 
logger -p kern.err "hello there"


