1. Using the useradd command, add accounts for the following users in your system: user1, user2,
user3, user4, user5, user6 and user7. Remember to give each user a password.

useradd user1 -md /home/user1 -c "User1";
useradd user2 -md /home/user2 -c "User2";
useradd user3 -md /home/user3 -c "User3";
useradd user4 -md /home/user4 -c "User4";
useradd user5 -md /home/user5 -c "User5";
useradd user6 -md /home/user6 -c "User6";
useradd user7 -md /home/user7 -c "User7";
password: user1, user2, user3, user4, user5, user6, user7

2. Using the groupadd command, add the following groups to your system.
Group
GID
sales
10000
hr
10001
web
10002
Why should you set GID in this manner instead of allowing the system to set the GID by default?

groupadd -g 10000 sales;
groupadd -g 10001 hr;
groupadd -g 10002 web;

3. Using the usermod command to add user1 and user2 to the sales auxiliary group, user3 and
user4 to the hr auxiliary group. User5 and user6 to web auxiliary group. And add user7 to all auxiliary groups

usermod -aG sales user1;
usermod -aG sales user2;
usermod -aG hr user3;
usermod -aG hr user4;
usermod -aG web user5;
usermod -aG web user6;
usermod -aG sales user7;
usermod -aG hr user7;
usermod -aG web user7;

4. Login as each user and use id command to verify that they are in the appropriate groups. How else might you verify this information?

on each user use 'id' command.

or

tail /etc/group
...
sales:x:10000:user1,user2,user7
hr:x:10001:user3,user4,user7
web:x:10002:user5,user6,user7


5. Create a directory called /depts with a sales, hr, and web directory within the /depts directory.

mkdir /depts
cd /depts
mkdir sales hr web

6. Using the chgrp command, set the group ownership of each directory to the group with the matching name

chgrp sales sales;
chgrp hr hr;
chgrp web web;

7. Set the permissions on the /depts directory to 755, and each subdirectory to 770

chmod 755 /depts
chmod 770 /depts/sales
chmod 770 /depts/hr
chmod 770 /depts/web

8. Set the set-gid bit on each departmental directory

chmod g+s /depts/sales;
chmod g+s /depts/hr;
chmod g+s /depts/web;

to verify:
----------
drwxrws---. 2 root hr    6 Feb 10 15:17 hr
drwxrws---. 2 root sales 6 Feb 10 15:17 sales
drwxrws---. 2 root web   6 Feb 10 15:17 web


9. Use the su command to switch to the user2 account and attempt the following commands:
touch /depts/sales/user2.txt
touch /depts/hr/user2.txt
touch /depts/web/user2.txt
Which of these commands succeeded and which failed? What is the group ownership of the files that were created?

sudo su - user2
only the first file gets created:
-rw-rw-r--. 1 user2 sales 0 Feb 10 16:20 /depts/sales/user2.txt


10. Configure sudoers file to allow user3 and user4 to use /bin/mount and /bin/umount commands, while allowing user5 only to use /sbin/fdisk command.

visudo  ---> then we add:
user3 ALL=/bin/mount, /bun/umount
user4 ALL=/bin/mount, /bun/umount
user5 ALL=/sbin/fdisk

11. Login by user3 and try to unmount /boot.

sudo umount /boot

user3 can unmount boot

12. Login by user4 and remount /boot. Also try to view the partition table using fdisk.

sudo mount /boot
sudo fdisk -l
user4 can mount boot, but can't use fdisk

13. Create a directory with permissions rwxrwx---, grant a second group (sales) r-x permissions

mkdir foo
chmod 770 foo
chgrp sales foo
chmod g-w foo

14. Create a file on that directory and grant read and write to a second group (sales)

touch /depts/foo/bar.txt
chmod g+rw depts/foo/bar.txt

15. set the the owning group as the owning group of any newly created file in that directory.

chmod g+s /depts/foo;

